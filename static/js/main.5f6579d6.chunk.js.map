{"version":3,"sources":["components/Portfolio.js","App.js","reportWebVitals.js","index.js"],"names":["AnimatedPortfolio","canvasRef","useRef","contactSectionRef","hoveredFeatured","setHoveredFeatured","useState","hoveredSecondary","setHoveredSecondary","themeColor","setThemeColor","modalOpen","setModalOpen","selectedProject","setSelectedProject","aboutModalOpen","setAboutModalOpen","githubModalOpen","setGithubModalOpen","formData","setFormData","name","email","message","formErrors","setFormErrors","isSubmitting","setIsSubmitting","submitSuccess","setSubmitSuccess","colorPresets","useMemo","useEffect","randomIndex","Math","floor","random","length","selectedColor","document","documentElement","style","setProperty","darkerColor","adjustColorBrightness","lighterColor","color","percent","num","parseInt","replace","r","g","b","min","max","toString","padStart","canvas","current","context","getContext","particles","mouseX","window","innerWidth","mouseY","innerHeight","handleResize","width","height","handleMouseMove","event","clientX","clientY","loop","fillStyle","fillRect","i","particle","lastPosition","x","position","y","offset","speed","shift","cos","orbit","sin","size","targetSize","round","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","arc","PI","fill","animationFrameId","requestAnimationFrame","addEventListener","createParticles","push","fillColor","RADIUS","removeEventListener","cancelAnimationFrame","aboutMe","image","bio","skills","education","experience","openProjectModal","project","type","console","log","title","body","overflow","closeModal","closeAboutModal","closeGithubModal","handleInputChange","e","value","target","[object Object]","React","createElement","className","ref","onClick","openGithubModal","openAboutModal","scrollToContact","scrollIntoView","behavior","block","id","description","technologies","longDescription","links","github","live","map","key","onMouseEnter","onMouseLeave","cursor","preventDefault","stopPropagation","onSubmit","async","errors","validateForm","trim","test","Object","keys","Promise","resolve","setTimeout","error","submit","placeholder","onChange","disabled","href","rel","demo","skill","index","src","alt","borderRadius","marginBottom","boxShadow","backgroundColor","maxWidth","padding","textAlign","display","justifyContent","navigateToGithub","open","border","App","Portfolio","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5f6579d6.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport './Portfolio.css';\n\nconst AnimatedPortfolio = () => {\n  const yourName = \"Shivansh Yadav\";\n  const canvasRef = useRef(null);\n  const contactSectionRef = useRef(null);\n  \n  // State to track which featured project is being hovered\n  const [hoveredFeatured, setHoveredFeatured] = useState(null);\n  \n  // State to track which secondary project is being hovered\n  const [hoveredSecondary, setHoveredSecondary] = useState(null);\n  \n  // State for theme color\n  const [themeColor, setThemeColor] = useState('#b4f1b1');\n  \n  // State for modals\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [aboutModalOpen, setAboutModalOpen] = useState(false);\n  const [githubModalOpen, setGithubModalOpen] = useState(false);\n  \n  // State for contact form\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  \n  // Use useMemo to memoize the colorPresets array\n  const colorPresets = useMemo(() => [\n    '#b4f1b1', // Original light green\n    '#61dafb', // React blue\n    '#f9c74f', // Bright yellow\n    '#f94144', // Bright red\n    '#90be6d', // Muted green\n    '#f8961e', // Orange\n    '#c792ea', // Purple\n    '#43aa8b', // Teal\n    '#ff85a1', // Pink\n    '#4cc9f0'  // Cyan\n  ], []); // Empty dependency array means this will only be created once\n  \n  // Set random theme color on component mount\n  useEffect(() => {\n    const randomIndex = Math.floor(Math.random() * colorPresets.length);\n    const selectedColor = colorPresets[randomIndex];\n    setThemeColor(selectedColor);\n    \n    // Apply the selected color to CSS variables\n    document.documentElement.style.setProperty('--theme-color', selectedColor);\n    \n    // Set a complementary darker variation for hover effects\n    const darkerColor = adjustColorBrightness(selectedColor, -20);\n    document.documentElement.style.setProperty('--theme-color-dark', darkerColor);\n    \n    // Set a complementary lighter variation\n    const lighterColor = adjustColorBrightness(selectedColor, 20);\n    document.documentElement.style.setProperty('--theme-color-light', lighterColor);\n  }, []); // Empty dependency array - only runs once on mount\n  \n  // Helper function to adjust color brightness\n  const adjustColorBrightness = (color, percent) => {\n    const num = parseInt(color.replace('#', ''), 16);\n    const r = (num >> 16) + percent;\n    const g = ((num >> 8) & 0x00FF) + percent;\n    const b = (num & 0x0000FF) + percent;\n    \n    const newR = Math.min(255, Math.max(0, r)).toString(16).padStart(2, '0');\n    const newG = Math.min(255, Math.max(0, g)).toString(16).padStart(2, '0');\n    const newB = Math.min(255, Math.max(0, b)).toString(16).padStart(2, '0');\n    \n    return `#${newR}${newG}${newB}`;\n  };\n  \n  // Particle animation\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const context = canvas.getContext('2d');\n    \n    // Animation variables\n    let particles = [];\n    let mouseX = window.innerWidth * 0.5;\n    let mouseY = window.innerHeight * 0.5;\n    let radiusScale = 1;\n    const RADIUS = 20;\n    const QUANTITY = 10; // Increased from 5 to 10 for more particles\n    \n    // Resize handler\n    const handleResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    \n    // Mouse move handler\n    const handleMouseMove = (event) => {\n      mouseX = event.clientX;\n      mouseY = event.clientY;\n    };\n    \n    // Create particles\n    const createParticles = () => {\n      particles = [];\n      for (let i = 0; i < QUANTITY; i++) {\n        particles.push({\n          size: 0.1,\n          position: { x: mouseX, y: mouseY },\n          offset: { x: 0, y: 0 },\n          shift: { x: mouseX, y: mouseY },\n          speed: 0.01 + Math.random() * 0.04,\n          targetSize: 1,\n          fillColor: themeColor, // Use the dynamic theme color\n          orbit: RADIUS * 0.5 + (RADIUS * 0.5 * Math.random())\n        });\n      }\n    };\n    \n    // Animation loop\n    const loop = () => {\n      // Fade effect for trailing\n      context.fillStyle = 'rgba(0, 0, 0, 0.05)';\n      context.fillRect(0, 0, canvas.width, canvas.height);\n      \n      for (let i = 0; i < particles.length; i++) {\n        const particle = particles[i];\n        const lastPosition = { x: particle.position.x, y: particle.position.y };\n        \n        // Rotation\n        particle.offset.x += particle.speed;\n        particle.offset.y += particle.speed;\n        \n        // Follow mouse with lag\n        particle.shift.x += (mouseX - particle.shift.x) * particle.speed;\n        particle.shift.y += (mouseY - particle.shift.y) * particle.speed;\n        \n        // Apply position\n        particle.position.x = particle.shift.x + Math.cos(i + particle.offset.x) * (particle.orbit * radiusScale);\n        particle.position.y = particle.shift.y + Math.sin(i + particle.offset.y) * (particle.orbit * radiusScale);\n        \n        // Limit to screen bounds\n        particle.position.x = Math.max(Math.min(particle.position.x, canvas.width), 0);\n        particle.position.y = Math.max(Math.min(particle.position.y, canvas.height), 0);\n        \n        // Adjust size\n        particle.size += (particle.targetSize - particle.size) * 0.05;\n        if (Math.round(particle.size) === Math.round(particle.targetSize)) {\n          particle.targetSize = 1 + Math.random() * 7;\n        }\n        \n        // Draw particle trail\n        context.beginPath();\n        context.strokeStyle = themeColor; // Use theme color\n        context.lineWidth = particle.size;\n        context.moveTo(lastPosition.x, lastPosition.y);\n        context.lineTo(particle.position.x, particle.position.y);\n        context.stroke();\n        \n        // Draw particle\n        context.beginPath();\n        context.fillStyle = themeColor; // Use theme color\n        context.arc(particle.position.x, particle.position.y, particle.size / 2, 0, Math.PI * 2, true);\n        context.fill();\n      }\n      \n      animationFrameId = requestAnimationFrame(loop);\n    };\n    \n    // Initialize\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('mousemove', handleMouseMove);\n    createParticles();\n    let animationFrameId = requestAnimationFrame(loop);\n    \n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('mousemove', handleMouseMove);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [themeColor]);\n  \n  // Featured projects data\n  const featuredProjects = [\n    {\n      id: 1,\n      title: \"CodePad – AI-Powered Code Companion\",\n      description: \"A Chrome extension that analyzes code, generates test cases, and offers intelligent feedback for developers.\",\n      technologies: \"JavaScript, Chrome APIs, React, AI Integration\",\n      longDescription: \"CodePad is a developer-focused Chrome extension designed to assist with real-time coding feedback and test generation. It supports intelligent code analysis, generates categorized test cases (easy, medium, hard), and includes a 'talk to code' feature that explains logic in plain language. With real-time mirroring to files or editors, CodePad enhances productivity and learning for developers and students alike.\",\n      links: {\n        github: \"https://github.com/JustRookie69\",\n        live: \"https://chromewebstore.google.com/detail/becjmaipmibfklbmnodpglepcapnbkhf?utm_source=item-share-cb\",\n        // demo: \"https://youtu.be/example\"\n      }\n    },\n    {\n      id: 2,\n      title: \"BGPDF – Binary Grid PDF Format\",\n      description: \"A C++ console tool for extracting and encoding PDFs into an binary grid format optimized for AI/Ml.\",\n      technologies: \"C++, Poppler, Custom Compression, Grid Encoding\",\n      longDescription: \"BGPDF is a custom document processing framework that converts structured PDFs into a compressed binary grid format optimized for AI/ML tasks. It includes smart layout parsing, image coverage detection, Huffman encoding, and mode-based adaptive compression (e.g., MapMode, TokenMode). Ideal for large-scale document analysis, training data preparation, and government form digitization.\",\n      links: {\n        github: \"https://github.com/JustRookie69\",\n        live: \"https://ai-generator.shivanshyadav.com\",\n        // demo: \"https://youtu.be/example2\"\n      }\n    }\n  ];\n  \n  // Secondary projects data\n  const secondaryProjects = [\n    {\n      id: 1,\n      title: \"Equation Solver\",\n      description: \"A tool that teaches step-by-step solutions to linear and quadratic equations.\",\n      technologies: \"React JS, Go, Firebase\",\n      longDescription: \"This educational web app helps students solve and understand linear and quadratic equations. Users input an equation, and the app displays step-by-step solutions and key concepts. It's built using React for the frontend and Go for the backend, with Firebase managing user sessions and real-time interaction.\",\n      links: {\n        github: \"https://github.com/shivanshyadav/equation-solver\",  // Update if incorrect\n        live: \"https://equations.shivanshyadav.com\",\n        // demo: null\n      }\n    },\n    {\n      id: 2,\n      title: \"Video 2-3D\",\n      description: \"Experimental tool for depth estimation from 2D videos.\",\n      technologies: \"Python, OpenCV, NumPy\",\n      longDescription: \"Video 2-3D is a computer vision project that processes 2D video frames to estimate depth and simulate 3D structures. It uses OpenCV and NumPy for frame extraction, edge detection, and basic stereo disparity simulation. This tool is a stepping stone toward building real-time 3D reconstruction systems from conventional video sources.\",\n      links: {\n        github: \"https://github.com/shivanshyadav/video-to-3d\",\n        live: \"https://3dvision.shivanshyadav.com\",  // Optional, adjust if needed\n        // demo: \"https://youtu.be/example3\"\n      }\n    },\n    {\n      id: 3,\n      title: \"Smart Classroom Teaching Tool\",\n      description: \"An interactive teaching platform to visualize concepts through movement and physics.\",\n      technologies: \"Python\",\n      longDescription: \"Designed for educators, this tool simulates physics and math concepts using arrows, object motion, and timeline navigation. It features a grid-based canvas and smart object interactions, making it ideal for explaining motion, vectors, and dynamic systems. Built in Python, it supports real-time teaching in both physical and virtual classrooms.\",\n      links: {\n        github: \"https://github.com/shivanshyadav/smart-classroom\",\n        live: \"https://smartclass.shivanshyadav.com\",\n        // demo: null\n      }\n    },\n    {\n      id: 4,\n      title: \"one08 – Interval Training Watch App\",\n      description: \"A smartwatch app for customized interval vibration alerts during workouts.\",\n      technologies: \"Kotlin\",\n      longDescription: \"One08 is a smartwatch utility designed for fitness enthusiasts. It allows users to set vibration alerts that trigger every N seconds for T duration, helping with interval-based workouts, breathing exercises, or focus training. Built natively in Kotlin for Android-based smartwatches.\",\n      links: {\n        github: \"https://github.com/shivanshyadav/one08\",\n        live: null,\n        // demo: \"https://youtu.be/example4\"\n      }\n    }\n  ];\n\n  // About me data\n  const aboutMe = {\n    image: \"/myfolio/me.jpeg\",\n    bio: \"I'm a developer and researcher passionate about blending software engineering with real-world impact. At Physics Wallah, I work on building intelligent systems that support education and research. My projects span AI-powered tools like CodePad, document compression formats like BGPDF for ML pipelines, and interactive platforms like the Smart Classroom Teaching Tool. With a foundation in computer science and a strong inclination toward problem-solving, I enjoy working on high-performance systems, data-centric applications, and experimental projects that push boundaries in ed-tech, AI, and healthcare.\",\n    skills: [\n      \"Full-stack Development (React, Node.js, Go)\",\n      \"AI-Powered Tools & LLM Integration\",\n      \"Smart Document Formats & Compression (BGPDF)\",\n      \"Interactive Educational Platforms\",\n      \"Chrome Extension & Productivity Tools\",\n      \"Smartwatch App Development (Kotlin)\",\n      \"C++ Systems Programming & Optimization\",\n      \"Computer Vision & 3D Estimation (OpenCV, NumPy)\"\n    ],\n    education: \"BTech in Computer Science, Bennett University (Graduated 2021)\",\n    experience: \"Software Development Engineer at Physics Wallah (2021–Present)\"\n  };\n  \n\n  // Function to open modal with project details\n  const openProjectModal = (project, type) => {\n    console.log('Opening modal for project:', project.title, 'Type:', type);\n    setSelectedProject({...project, type});\n    setModalOpen(true);\n    // When modal is open, prevent background scrolling\n    document.body.style.overflow = 'hidden';\n  };\n\n  // Function to close modal\n  const closeModal = () => {\n    setModalOpen(false);\n    setSelectedProject(null);\n    // Re-enable scrolling when modal is closed\n    document.body.style.overflow = 'auto';\n  };\n\n  // Function to open about modal\n  const openAboutModal = () => {\n    setAboutModalOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n\n  // Function to close about modal\n  const closeAboutModal = () => {\n    setAboutModalOpen(false);\n    document.body.style.overflow = 'auto';\n  };\n\n  // Function to open GitHub confirmation modal\n  const openGithubModal = () => {\n    setGithubModalOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n\n  // Function to close GitHub confirmation modal\n  const closeGithubModal = () => {\n    setGithubModalOpen(false);\n    document.body.style.overflow = 'auto';\n  };\n\n  // Function to navigate to GitHub\n  const navigateToGithub = () => {\n    window.open(\"https://github.com/shivanshyadav\", \"_blank\");\n    closeGithubModal();\n  };\n\n  // Function to scroll to contact section\n  const scrollToContact = () => {\n    contactSectionRef.current.scrollIntoView({ \n      behavior: 'smooth',\n      block: 'start'\n    });\n  };\n\n  // Handle contact form input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    \n    // Clear error when user starts typing\n    if (formErrors[name]) {\n      setFormErrors({\n        ...formErrors,\n        [name]: ''\n      });\n    }\n  };\n\n  // Validate form\n  const validateForm = () => {\n    const errors = {};\n    \n    if (!formData.name.trim()) {\n      errors.name = 'Name is required';\n    }\n    \n    if (!formData.email.trim()) {\n      errors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      errors.email = 'Email is invalid';\n    }\n    \n    if (!formData.message.trim()) {\n      errors.message = 'Message is required';\n    }\n    \n    return errors;\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate form\n    const errors = validateForm();\n    if (Object.keys(errors).length > 0) {\n      setFormErrors(errors);\n      return;\n    }\n    \n    // Set submitting state\n    setIsSubmitting(true);\n    \n    try {\n      // This would be replaced with your actual API call to the Go backend\n      // Example:\n      // const response = await fetch('https://your-go-api.com/contact', {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify(formData)\n      // });\n      \n      // Simulate API call with setTimeout\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Clear form after successful submission\n      setFormData({\n        name: '',\n        email: '',\n        message: ''\n      });\n      \n      // Show success message\n      setSubmitSuccess(true);\n      \n      // Hide success message after 3 seconds\n      setTimeout(() => {\n        setSubmitSuccess(false);\n      }, 3000);\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      setFormErrors({\n        submit: 'Failed to send message. Please try again.'\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"portfolio-container\">\n      {/* Canvas for particle animation */}\n      <canvas ref={canvasRef} className=\"animation-canvas\"></canvas>\n      \n      {/* Navigation Bar */}\n      <header className=\"nav-header\">\n        <div className=\"nav-name\">{yourName}</div>\n        <nav>\n          <ul className=\"nav-buttons\">\n            <li><button className=\"nav-button\" onClick={openGithubModal}>Projects</button></li>\n            <li><button className=\"nav-button\" onClick={openAboutModal}>About</button></li>\n            <li><button className=\"nav-button\" onClick={scrollToContact}>Contact</button></li>\n          </ul>\n        </nav>\n      </header>\n      \n      {/* Main Content */}\n      <main className=\"main-content\">\n        {/* Left Side - Your Name */}\n        <div className=\"left-section\">\n          <div className=\"name-container\">\n            <h1 className=\"main-name\">{yourName}</h1>\n            <p className=\"profession\">SDE, Physics Wallah</p>\n            <p className=\"intro-text\">\n            Passionate developer blending code with real-world impact.\n            From AI-ready document formats to intuitive tools for education and medical research.\n            </p>\n          </div>\n        </div>\n        \n        {/* Right Side - Working Area */}\n        <div className=\"right-section\">\n          <div className=\"project-showcase\">\n            Project showcase area\n          </div>\n        </div>\n      </main>\n      \n      {/* Featured Projects Section - 2 blocks with hover effect */}\n      <section className=\"featured-projects-section\">\n        <h2 className=\"section-title\">Featured Projects</h2>\n        <div className=\"featured-projects-container\">\n          {featuredProjects.map(project => (\n            <div \n              key={project.id}\n              className={`featured-project-card ${hoveredFeatured === project.id ? 'expanded' : ''} ${hoveredFeatured !== null && hoveredFeatured !== project.id ? 'contracted' : ''}`}\n              onMouseEnter={() => setHoveredFeatured(project.id)}\n              onMouseLeave={() => setHoveredFeatured(null)}\n              onClick={() => openProjectModal(project, 'featured')}\n              style={{ cursor: 'pointer' }}\n            >\n              <h3 className=\"project-title\">{project.title}</h3>\n              <p className=\"project-description\">{project.description}</p>\n              <p className=\"project-tech\">\n                <span className=\"tech-label\">Technologies:</span> {project.technologies}\n              </p>\n              <button \n                className=\"view-project-btn\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  openProjectModal(project, 'featured');\n                }}\n              >\n                View Project\n              </button>\n            </div>\n          ))}\n        </div>\n      </section>\n      \n      {/* Secondary Projects Section - 4 adjacent boxes */}\n      <section className=\"secondary-projects-section\">\n        <h2 className=\"section-title\">Other Projects</h2>\n        <div className=\"secondary-projects-container\">\n          {secondaryProjects.map(project => (\n            <div \n              key={project.id}\n              className={`secondary-project-card ${hoveredSecondary === project.id ? 'hovered' : ''}`}\n              onMouseEnter={() => setHoveredSecondary(project.id)}\n              onMouseLeave={() => setHoveredSecondary(null)}\n              onClick={() => openProjectModal(project, 'secondary')}\n              style={{ cursor: 'pointer' }}\n            >\n              <h3 className=\"project-title\">{project.title}</h3>\n              <p className=\"project-description\">{project.description}</p>\n              <p className=\"project-tech\">\n                <span className=\"tech-label\">Technologies:</span> {project.technologies}\n              </p>\n            </div>\n          ))}\n        </div>\n      </section>\n      \n      {/* Contact Section */}\n      <section className=\"contact-section\" ref={contactSectionRef}>\n        <h2 className=\"section-title\">Contact Me</h2>\n        <div className=\"contact-container\">\n          <div className=\"contact-info\">\n            <div className=\"contact-item\">\n              <span className=\"contact-label\">Email:</span>\n              <span className=\"contact-value\">shivansh.yadav@example.com</span>\n            </div>\n            <div className=\"contact-item\">\n              <span className=\"contact-label\">LinkedIn:</span>\n              <span className=\"contact-value\">https://www.linkedin.com/in/shivansho1/</span>\n            </div>\n            <div className=\"contact-item\">\n              <span className=\"contact-label\">GitHub:</span>\n              <span className=\"contact-value\">https://github.com/JustRookie69</span>\n            </div>\n          </div>\n          <div className=\"contact-form\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <input \n                  type=\"text\" \n                  name=\"name\"\n                  placeholder=\"Your Name\" \n                  className={`form-input ${formErrors.name ? 'error' : ''}`}\n                  value={formData.name}\n                  onChange={handleInputChange}\n                />\n                {formErrors.name && <div className=\"error-message\">{formErrors.name}</div>}\n              </div>\n              <div className=\"form-group\">\n                <input \n                  type=\"email\" \n                  name=\"email\"\n                  placeholder=\"Your Email\" \n                  className={`form-input ${formErrors.email ? 'error' : ''}`}\n                  value={formData.email}\n                  onChange={handleInputChange}\n                />\n                {formErrors.email && <div className=\"error-message\">{formErrors.email}</div>}\n              </div>\n              <div className=\"form-group\">\n                <textarea \n                  name=\"message\"\n                  placeholder=\"Your Message\" \n                  className={`form-textarea ${formErrors.message ? 'error' : ''}`}\n                  value={formData.message}\n                  onChange={handleInputChange}\n                ></textarea>\n                {formErrors.message && <div className=\"error-message\">{formErrors.message}</div>}\n              </div>\n              {formErrors.submit && <div className=\"error-message\">{formErrors.submit}</div>}\n              {submitSuccess && <div className=\"success-message\">Message sent successfully!</div>}\n              <button \n                type=\"submit\" \n                className=\"submit-btn\"\n                disabled={isSubmitting}\n              >\n                {isSubmitting ? 'Sending...' : 'Send Message'}\n              </button>\n            </form>\n          </div>\n        </div>\n      </section>\n      \n      {/* Project Modal */}\n      {modalOpen && selectedProject && (\n        <div \n          className=\"modal-overlay\" \n          onClick={closeModal}\n        >\n          <div \n            className=\"project-modal\" \n            onClick={e => e.stopPropagation()}\n          >\n            <button \n              className=\"modal-close-btn\" \n              onClick={closeModal}\n            >×</button>\n            <h2 className=\"modal-title\">\n              {selectedProject.title}\n            </h2>\n            <div className=\"modal-content\">\n              <div className=\"modal-description\">\n                <p>{selectedProject.longDescription}</p>\n                <div className=\"modal-tech-stack\">\n                  <h3>Technologies Used:</h3>\n                  <p>{selectedProject.technologies}</p>\n                </div>\n              </div>\n              <div className=\"modal-links\">\n                <h3>Project Links</h3>\n                <div className=\"links-container\">\n                  {selectedProject.links.github && (\n                    <a \n                      href={selectedProject.links.github} \n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\" \n                      className=\"project-link github\"\n                    >\n                      GitHub Repository\n                    </a>\n                  )}\n                  {selectedProject.links.live && (\n                    <a \n                      href={selectedProject.links.live} \n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\" \n                      className=\"project-link live\"\n                    >\n                      Live Demo\n                    </a>\n                  )}\n                  {selectedProject.links.demo && (\n                    <a \n                      href={selectedProject.links.demo} \n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\" \n                      className=\"project-link video\"\n                    >\n                      Video Demo\n                    </a>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* About Me Modal */}\n      {aboutModalOpen && (\n        <div \n          className=\"modal-overlay\" \n          onClick={closeAboutModal}\n        >\n          <div \n            className=\"project-modal\" \n            onClick={e => e.stopPropagation()}\n          >\n            <button \n              className=\"modal-close-btn\" \n              onClick={closeAboutModal}\n            >×</button>\n            <h2 className=\"modal-title\">\n              About Me\n            </h2>\n            <div className=\"modal-content\">\n              <div className=\"modal-description\">\n                <p>{aboutMe.bio}</p>\n                <div className=\"modal-tech-stack\">\n                  <h3>Skills:</h3>\n                  <ul>\n                    {aboutMe.skills.map((skill, index) => (\n                      <li key={index}>{skill}</li>\n                    ))}\n                  </ul>\n                  <h3>Education:</h3>\n                  <p>{aboutMe.education}</p>\n                  <h3>Experience:</h3>\n                  <p>{aboutMe.experience}</p>\n                </div>\n              </div>\n              <div className=\"modal-links\">\n                <img \n                  src={aboutMe.image} \n                  alt=\"Shivansh Yadav\" \n                  style={{ \n                    width: '100%', \n                    borderRadius: '8px',\n                    marginBottom: '1rem',\n                    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.3)'\n                  }} \n                />\n                <div className=\"links-container\">\n                  <a \n                    href=\"https://linkedin.com/in/shivanshyadav\" \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\" \n                    className=\"project-link github\"\n                    style={{ backgroundColor: '#0077B5' }}\n                  >\n                    LinkedIn Profile\n                  </a>\n                  <a \n                    href=\"https://github.com/JustRookie69\" \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\" \n                    className=\"project-link github\"\n                  >\n                    GitHub Profile\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* GitHub Navigation Confirmation Modal */}\n      {githubModalOpen && (\n        <div \n          className=\"modal-overlay\" \n          onClick={closeGithubModal}\n        >\n          <div \n            className=\"project-modal\" \n            onClick={e => e.stopPropagation()}\n            style={{ maxWidth: '500px' }}\n          >\n            <button \n              className=\"modal-close-btn\" \n              onClick={closeGithubModal}\n            >×</button>\n            <h2 className=\"modal-title\">\n              Navigate to GitHub\n            </h2>\n            <div style={{ padding: '2rem', textAlign: 'center' }}>\n              <p style={{ marginBottom: '2rem' }}>\n                Would you like to navigate to my GitHub profile to see all my projects?\n              </p>\n              <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n                <button \n                  className=\"view-project-btn\"\n                  onClick={navigateToGithub}\n                  style={{ \n                    backgroundColor: 'var(--theme-color)',\n                    color: '#000',\n                    border: 'none'\n                  }}\n                >\n                  Yes, take me there\n                </button>\n                <button \n                  className=\"view-project-btn\"\n                  onClick={closeGithubModal}\n                >\n                  No, stay here\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Footer */}\n      <footer className=\"footer\">\n        <p>© 2025 {yourName}. All Rights Reserved.</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default AnimatedPortfolio;","import React from 'react';\nimport './App.css';\nimport Portfolio from './components/Portfolio';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Portfolio />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}